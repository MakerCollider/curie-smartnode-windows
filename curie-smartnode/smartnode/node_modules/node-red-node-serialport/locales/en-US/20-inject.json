{
    "common": {
        "label": {
            "payload": "Payload",
            "topic": "Topic",
            "name": "Name",
            "username": "Username",
            "password": "Password"
        },
        "status": {
            "connected": "connected",
            "not-connected": "not connected",
            "disconnected": "disconnected",
            "connecting": "connecting...",
            "error": "error",
            "ok": "OK"
        },
        "notification": {
            "error": "<strong>Error</strong>: __message__",
            "errors": {
                "not-deployed": "node not deployed",
                "no-response": "no response from server",
                "unexpected": "unexpected error (__status__) __message__"
            }
        },
        "errors": {
            "nooverride": "Warning: msg properties can no longer override set node properties. See bit.ly/nr-override-msg-props"
        }
    },
    "inject": {
        "inject": "inject",
        "repeat": "repeat = __repeat__",
        "crontab": "crontab = __crontab__",
        "stopped": "stopped",
        "failed": "Inject failed: __error__",
        "label": {
            "palette":"serial inject"
        },
        "timestamp": "timestamp",
        "none": "none",
        "interval": "interval",
        "interval-time": "interval between times",
        "time": "at a specific time",
        "seconds": "seconds",
        "minutes": "minutes",
        "hours": "hours",
        "between": "between",
        "previous": "previous value",
        "at": "at",
        "and": "and",
        "every": "every",
        "days": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
        ],
        "on": "on",
        "onstart": "Inject once at start?",
        "tip": "<b>Note:</b> \"interval between times\" and \"at a specific time\" will use cron.<br/>See info box for details.",
        "success": "Successfully injected: __label__",
        "errors": {
            "failed": "inject failed, see log for details"
        }
    },
    "serial": {
        "label": {
            "serialport": "Serial Port",
            "settings": "Settings",
            "baudrate": "Baud Rate",
            "databits": "Data Bits",
            "parity": "Parity",
            "stopbits": "Stop Bits",
            "input": "Input",
            "split": "Split input",
            "deliver": "and deliver",
            "output": "Output",
            "serial": "serial",
            "none": "none"
        },
        "placeholder": {
            "serialport": "for example: /dev/ttyUSB0/"
        },
        "parity": {
            "none": "None",
            "even": "Even",
            "mark": "Mark",
            "odd": "Odd",
            "space": "Space"
        },
        "split": {
            "character": "on the character",
            "timeout": "after a timeout of",
            "lengths": "into fixed lengths of"
        },
        "output": {
            "ascii": "ascii strings",
            "binary": "binary buffers"
        },
        "addsplit": "add split character to output messages",
        "tip": {
            "split": "Tip: the \"Split on\" character is used to split the input into separate messages. It can also be added to every message sent out to the serial port.",
            "timeout": "Tip: In timeout mode timeout starts from arrival of first character."
        },
        "onopen": "serial port __port__ opened at __baud__ baud __config__",
        "errors": {
            "missing-conf": "missing serial config",
            "serial-port": "serial port",
            "error": "serial port __port__ error: __error__",
            "unexpected-close": "serial port __port__ closed unexpectedly",
            "disconnected": "serial port __port__ disconnected",
            "closed": "serial port __port__ closed"
        }
    },
    "status": {
        "status": "status (all)",
        "statusNodes": "status (__number__)",
        "label": {
            "source": "Report status from",
            "node": "node",
            "type": "type",
            "selectAll": "select all",
            "sortByLabel": "sort by label",
            "sortByType": "sort by type"
        },
        "scope": {
            "all": "all nodes",
            "selected": "selected nodes"
        }
    },
    "debug": {
        "output": "Output",
        "msgprop": "message property",
        "msgobj": "complete msg object",
        "to": "to",
        "debtab": "debug tab",
        "tabcon": "debug tab and console",
        "notification": {
            "activated": "Successfully activated: __label__",
            "deactivated": "Successfully deactivated: __label__"
        },
        "sidebar": {
            "label": "debug",
            "name": "Debug messages"
        },
        "label": {
            "palette": "serial debug"
        }
    }
}
